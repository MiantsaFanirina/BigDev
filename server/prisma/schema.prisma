// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Represents a user in the system
model User {
  id                  String   @id @default(uuid())
  name                String   @unique
  password            String
  profile_picture_url String
  comments            Comment[]
  likes               Like[]
  posts               Post[]
  notifications       Notification[]
}

// Represents a notification for a user
model Notification {
  id        String   @id @default(uuid())
  message   String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id   String
}



// Represents a post in the system
model Post {
  id          String   @id @default(uuid())
  description String
  comments    Comment[]
  media       Media[]
  likes       Like[]
  createdAt   DateTime @default(now())
  user        User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id     String
}

// Represents media associated with a post
model Media {
  id   String @id @default(uuid())
  src  String 
  post Post   @relation(fields: [post_id], references: [id], onDelete: Cascade)
  post_id String
}


// Represents a comment on a post
model Comment {
  id        String    @id @default(uuid())
  message   String
  createdAt DateTime  @default(now())
  updateAt  DateTime  @updatedAt
  user      User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id   String
  post      Post      @relation(fields: [post_id], references: [id], onDelete: Cascade)
  post_id   String
  parent    Comment?  @relation("ParentChild", fields: [parent_id], references: [id], onDelete: Cascade)
  children  Comment[] @relation("ParentChild")
  parent_id String?
}


// Represents a like on a post
model Like {
  user       User    @relation(fields: [user_id], references: [id])
  user_id    String
  post    Post @relation(fields: [post_id], references: [id])
  post_id String

  @@id([user_id, post_id])
}